plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'maven-publish'
}

def crashlyticsEnabled = new File(projectDir.absolutePath +'/google-services.json').exists() && new File(LinphoneSdkBuildDir + '/libs/').exists() && new File(LinphoneSdkBuildDir + '/libs-debug/').exists()

def oktaProperties = new Properties()
rootProject.file("okta.properties").withInputStream { oktaProperties.load(it) }
android.defaultConfig {
    buildConfigField "String", 'DISCOVERY_URL', "\"${oktaProperties.getProperty('discoveryUrl')}\""
    buildConfigField "String", 'CLIENT_ID', "\"${oktaProperties.getProperty('clientId')}\""
    buildConfigField "String", 'SIGN_IN_REDIRECT_URI', "\"${oktaProperties.getProperty('signInRedirectUri')}\""
    buildConfigField "String", 'SIGN_OUT_REDIRECT_URI', "\"${oktaProperties.getProperty('signOutRedirectUri')}\""
    buildConfigField "String", 'KEY_AES', "\"${oktaProperties.getProperty('keyAES')}\""
    buildConfigField "String", "OKTA_API_USER", "\"${oktaProperties.oktaApiUser}\""
    buildConfigField "String", "OKTA_API_PASSWORD", "\"${oktaProperties.oktaApiPassword}\""
    buildConfigField "String", "OKTA_API_URL", "\"${oktaProperties.oktaApiUrl}\""
}

static def parseScheme(String uri) {
    def index = uri.indexOf(':/')
    if (index == -1) {
        throw new IllegalStateException("Scheme is not in a valid format.")
    }
    return uri.substring(0, index)
}

configurations {
    customImplementation.extendsFrom implementation
}
task linphoneSdkSource() {
    doLast {
        configurations.customImplementation.getIncoming().each {
            it.getResolutionResult().allComponents.each {
                if (it.id.getDisplayName().contains("linphone-sdk-android")) {
                    println 'Linphone SDK used is ' + it.moduleVersion.version + ' from ' + it.properties["repositoryName"]
                }
            }
        }
    }
}

project.tasks['preBuild'].dependsOn 'linphoneSdkSource'

android {
    namespace 'cc.cans.canscloud.sdk'
    compileSdk 36

    packagingOptions {
        resources {
            excludes += 'META-INF/okta/version.properties'
        }
    }

    defaultConfig {
        minSdk 28
        targetSdk 36

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", 'DISCOVERY_URL', "\"${oktaProperties.getProperty('discoveryUrl')}\""
        buildConfigField "String", 'CLIENT_ID', "\"${oktaProperties.getProperty('clientId')}\""
        buildConfigField "String", 'SIGN_IN_REDIRECT_URI', "\"${oktaProperties.getProperty('signInRedirectUri')}\""
        buildConfigField "String", 'SIGN_OUT_REDIRECT_URI', "\"${oktaProperties.getProperty('signOutRedirectUri')}\""
        buildConfigField "String", 'KEY_AES', "\"${oktaProperties.getProperty('keyAES')}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [
                    "appAuthRedirectScheme": parseScheme(oktaProperties.getProperty('signInRedirectUri'))
            ]
        }

        releaseWithCrashlytics {
            initWith release

            resValue "bool", "crashlytics_enabled", crashlyticsEnabled.toString()

            if (crashlyticsEnabled) {
                firebaseCrashlytics {
                    nativeSymbolUploadEnabled true
                    unstrippedNativeLibsDir file(LinphoneSdkBuildDir + '/libs-debug/').toString()
                }
            }
        }

        debug {
            jniDebuggable true

            if (crashlyticsEnabled) {
                firebaseCrashlytics {
                    nativeSymbolUploadEnabled true
                    unstrippedNativeLibsDir file(LinphoneSdkBuildDir + '/libs-debug/').toString()
                }
            }

            manifestPlaceholders = [
                    "appAuthRedirectScheme": parseScheme(oktaProperties.getProperty('signInRedirectUri'))
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'

    implementation  'org.linphone:linphone-sdk-android:5.5.+'
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha06"
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'androidx.media:media:1.6.0'

    def logging_version = "4.3.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-simplexml:2.9.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // OKTA
    // Ensure that all dependencies are compatible using the Bill of Materials (BOM).
    implementation(platform('com.okta.kotlin:bom:2.0.3'))
    implementation 'com.okta.android:okta-oidc-android:1.3.4'
    implementation 'com.okta.authn.sdk:okta-authn-sdk-api:3.0.0'
    implementation('com.okta.authn.sdk:okta-authn-sdk-impl:3.0.0') {
        exclude group: 'com.okta.sdk', module: 'okta-sdk-httpclient'
    }
    implementation 'com.okta.sdk:okta-sdk-okhttp:3.0.0'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.cans-communication'
            artifactId = 'canscloud-android-sdk'
            version = '1.1.79'

            afterEvaluate {
                from components.release
            }
        }
    }
}